# azure-pipelines.yml
trigger:
  branches:
    include:
      - develop
      - master

pool:
  name: 'CloudAgent'

variables:
  isDevelop: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: 'Build Application'
  jobs:
  - job: BuildJob
    displayName: 'Build and Test'
    steps:
    - script: echo "Building the application... Branch is $(Build.SourceBranchName)"
      displayName: 'Build Information'
      
    # Your build steps here
    - script: echo "Packaging the application..."
      displayName: 'Package Application'
    
    # Publish the artifact for use in deployment stages
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'
      displayName: 'Publish Build Artifacts'

# Deploy to Dev ONLY for develop branch
- stage: DeployToDev
  displayName: 'Deploy to Development'
  dependsOn: Build
  condition: and(succeeded(), eq(variables.isDevelop, true))
  jobs:
  - deployment: DeployDev
    displayName: 'Deploy to Dev Environment'
    environment: 'Development'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'
            displayName: 'Download Build Artifacts'
          
          - script: |
              echo "Deploying to development environment..."
              echo "Current branch: $(Build.SourceBranchName)"
              # Add your actual deployment commands here
            displayName: 'Deploy to Development'

# Deploy to Production with approval ONLY for master branch
- stage: DeployToProd
  displayName: 'Deploy to Production'
  dependsOn: Build
  condition: and(succeeded(), eq(variables.isMaster, true))
  jobs:
  - deployment: DeployProd
    displayName: 'Deploy to Production Environment'
    environment: 'Production'  # This environment has approval gates configured
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'
            displayName: 'Download Build Artifacts'
          
          - script: |
              echo "Deploying to production environment..."
              echo "Current branch: $(Build.SourceBranchName)"
              # Add your actual production deployment commands here
            displayName: 'Deploy to Production'